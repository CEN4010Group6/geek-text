upstream docker-backend {
  server backend:3000;
}

upstream docker-frontend {
  server frontend:4200;
}

server {
  listen [::]:8080 default_server;
  listen 8080 default_server;

  # The host name to respond to.
  server_name _;

  # include h5bp/basic.conf;

  location /api {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Authorization $http_authorization;
    proxy_cache backend;
    proxy_cache_use_stale updating;
    proxy_cache_lock on;
    proxy_cache_valid any 30s;
    proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
    # proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
    proxy_pass http://docker-backend;
  }

  location /sockjs-node/ {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Authorization $http_authorization;
    # proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
    proxy_pass http://docker-frontend;
  }

  location ^~ / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Authorization $http_authorization;
    # proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
    proxy_pass http://docker-frontend;
  }


}
