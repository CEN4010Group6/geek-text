name: Node.js CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [develop]

jobs:
  frontend:
    defaults:
      run:
        working-directory: frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('*/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - run: npm i -g @angular/cli
    - run: npm ci
    - run: cp .env.example .env
    - run: npm run test

  backend:
    defaults:
      run:
        working-directory: backend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('*/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - run: npm ci
    - run: DATABASE_URL=file:../db/dev.db npm run prisma:generate
    - run: DATABASE_URL=file:../db/dev.db npm run reset-db
    - run: DATABASE_URL=file:../db/dev.db npm run prisma:migrate
    - run: DATABASE_URL=file:../db.dev.db npm test
